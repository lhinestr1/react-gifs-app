{"version":3,"sources":["helpers/getGifs.js","components/GripCard.js","components/GripList.js","hooks/useGif.js","components/GripForm.js","App.js","index.js"],"names":["getGifs","a","category","api_key","fetch","resp","json","data","GripCard","title","img","console","log","className","src","alt","onClick","url","aux","document","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","copy_url","GripList","data_gifs","useState","isLoading","state","setstate","useEffect","then","gifs","useGif","role","map","value","key","id","images","original","length","GripForm","handlerCategory","add_category","onSubmit","ref","name","placeholder","autoComplete","type","App","categorys","setCategorys","useRef","e","preventDefault","s","current","nameCapitalized","charAt","toUpperCase","slice","prevent","class","ReactDOM","render","getElementById"],"mappings":"0NAGaA,EAAO,uCAAG,gDAAAC,EAAA,6DAAQC,EAAR,+BAAiB,OAAjB,SAGTC,EAAU,mCAHD,SAIIC,MAAM,gDAAD,OAAiDD,EAAjD,cAA8DD,EAA9D,aAJT,cAITG,EAJS,gBAKMA,EAAKC,OALX,uBAKRC,EALQ,EAKRA,KALQ,kBAMRA,GANQ,2DASR,aATQ,0DAAH,qDC8BLC,EA/BE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvBC,QAAQC,IAAIF,GAiBZ,OACI,yBAAKG,UAAU,QACX,yBAAKA,UAAU,eAAeC,IAAKJ,EAAKK,IAAKN,IAC7C,yBAAKI,UAAU,aACX,wBAAIA,UAAU,mBACV,4BAAQA,UAAU,0BAA0BG,QAAS,kBApBpD,SAACC,GAEd,IAAIC,EAAMC,SAASC,cAAc,SAEjCF,EAAIG,aAAa,QAASJ,GAE1BE,SAASG,KAAKC,YAAYL,GAE1BA,EAAIM,SAEJL,SAASM,YAAY,QAErBN,SAASG,KAAKI,YAAYR,GAQ6CS,CAASjB,KAApE,8BCMLkB,EA3BE,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAET2B,ECHY,SAAC3B,GAAc,IAAD,EAEN4B,mBAAS,CAC/BvB,KAAK,GACLwB,WAAU,IAJkB,mBAEzBC,EAFyB,KAElBC,EAFkB,KAmBhC,OAZAC,qBAAU,WAENlC,EAAQE,GACHiC,MAAM,SAAAC,GACHH,EAAS,CACL1B,KAAM6B,EACNL,WAAW,SAIxB,CAAC7B,IAEG8B,EDhBYK,CAAOnC,GAE1B,OACI,6BACI,yBAAKW,UAAU,0EAA0EyB,KAAK,SAC1F,wBAAIzB,UAAU,OAAOX,IAGrB2B,EAAUE,UAAY,0CAAqB,GAG/C,yBAAKlB,UAAU,oDAEXgB,EAAUtB,KAAKgC,KAAK,SAAAC,GAChB,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAME,GAAIjC,MAAO+B,EAAM/B,MAAOC,IAAK8B,EAAMG,OAAOC,SAAS3B,SAIzD,IAA1BY,EAAUtB,KAAKsC,QAAiBhB,EAAUE,UAAiD,GAArC,6DERvDe,EAfE,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,aAChC,OACI,0BAAMC,SAAUF,EAAiBlC,UAAU,YACvC,yBAAKA,UAAU,OACf,yBAAKA,UAAU,2BACX,2BAAOA,UAAU,eAAeqC,IAAKF,EAAcG,KAAK,YAAYC,YAAY,oBAAoBC,aAAa,SAErH,yBAAKxC,UAAU,2BACX,4BAAQyC,KAAK,SAASzC,UAAU,qCAAhC,eCgCD0C,MArCf,WAAgB,IAAD,EAEqBzB,mBAAS,IAF9B,mBAEN0B,EAFM,KAEKC,EAFL,KAGPT,EAAeU,iBAAO,IAkB5B,OACE,6BACE,wBAAI7C,UAAU,mBAAd,oBACA,kBAAC,EAAD,CAAUkC,gBAbU,SAACY,GACvBA,EAAEC,iBAEF,IATkBC,EASZV,EAAOH,EAAac,QAAQtB,MAC5BuB,EATW,kBADCF,EAUiBV,GATD,GAC3BU,EAAEG,OAAO,GAAGC,cAAgBJ,EAAEK,MAAM,GAU3CT,GAAc,SAACU,GAAD,OAAcJ,GAAd,mBAAiCI,OAC/CnB,EAAac,QAAQtB,MAAQ,IAMiBQ,aAAcA,IAEnC,IAArBQ,EAAUX,OACR,yBAAKuB,MAAM,sBAAsB9B,KAAK,SAAtC,yBACA,GAGFkB,EAAUjB,KAAK,SAAAC,GAAK,OAAI,kBAAC,EAAD,CAAUC,IAAKD,EAAOtC,SAAUsC,SCjChE6B,IAASC,OACL,kBAAC,EAAD,MACFnD,SAASoD,eAAe,U","file":"static/js/main.8bd8c5e9.chunk.js","sourcesContent":["\n\n\nexport const getGifs = async ( category='cars' ) => {\n\n    try{\n        const api_key = 'SLxKrY6Puqz2EkiTu48zkGyqqepsgoFT';\n        const resp = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${category}&limit=6`);\n        const {data} = await resp.json();\n        return data;\n    }catch(error){\n        //console.error(error)\n        return \"No existe\"\n    }\n    \n}","import React from 'react';\n\nconst GripCard = ({ title, img }) => {\n\n    console.log(img);\n\n    const copy_url = (url) => {\n        // Crea un campo de texto \"oculto\"\n        var aux = document.createElement(\"input\");\n        // Asigna el contenido del elemento especificado al valor del campo\n        aux.setAttribute(\"value\", url);\n        // Añade el campo a la página\n        document.body.appendChild(aux);\n        // Selecciona el contenido del campo\n        aux.select();\n        // Copia el texto seleccionado\n        document.execCommand(\"copy\");\n        // Elimina el campo de la página\n        document.body.removeChild(aux);\n    }\n    \n    return (\n        <div className=\"card\">\n            <img className=\"card-img-top\" src={img} alt={title} />\n            <div className=\"card-body\">\n                <h5 className=\"card-title mb-0\">\n                    <button className='btn btn-outline-primary' onClick={() => copy_url(img)} >Copiar al portapepeles</button>\n                </h5>\n            </div>\n        </div>\n    )\n}\n\nexport default GripCard;\n\n\n ","import React from 'react'\nimport { useGif } from '../hooks/useGif'\nimport GripCard from './GripCard'\n\n\nconst GripList = ({category}) => {\n    \n    const data_gifs =  useGif(category);\n\n    return (\n        <div>\n            <div className=\"alert alert-success text-center p-0 animate__animated animate__fadeInUp\" role=\"alert\">\n                <h1 className='p-0'>{category}</h1>\n            </div>\n            {\n                data_gifs.isLoading ? <p>Cargando...</p> : \"\"\n            }\n            {/* animate__fadeIn */}\n            <div className=\"card-columns animate__animated animate__fadeInUp\">\n            {\n                data_gifs.data.map( value => {\n                    return <GripCard key={value.id} title={value.title} img={value.images.original.url}></GripCard>\n                })\n            }\n            {\n                data_gifs.data.length === 0 && !data_gifs.isLoading ? <p>No se encontraron registros</p> : \"\" \n            }\n            </div>\n        </div>\n    )\n}\n\nexport default GripList\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useGif = (category) => {\n    \n    const [state, setstate] = useState({\n        data:[],\n        isLoading:true\n    })\n\n    useEffect(() => {\n        \n        getGifs(category)\n            .then( gifs => {\n                setstate({\n                    data: gifs,\n                    isLoading: false\n                })\n            })\n\n    }, [category])\n\n    return state;\n}\n","import React from 'react'\n\nconst GripForm = ({handlerCategory, add_category}) => {\n    return (\n        <form onSubmit={handlerCategory} className='mb-4 p-2'>\n            <div className='row'>\n            <div className='col-6 col-sm-4 col-md-3'>\n                <input className='form-control' ref={add_category} name='categoria' placeholder='agregue categoria' autoComplete='off' />\n            </div>\n            <div className='col-6 col-sm-4 col-md-3'>\n                <button type='submit' className='btn btn-outline-success btn-block'>Guardar</button>\n            </div>\n            </div>\n        </form>\n    )\n}\n\nexport default GripForm\n","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport GripList from './components/GripList';\nimport GripForm from './components/GripForm';\n\nfunction App() {\n\n  const [categorys, setCategorys] = useState([])\n  const add_category = useRef(\"\")\n\n  const capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n\n  const handlerCategory = (e) => {\n    e.preventDefault();\n\n    const name = add_category.current.value\n    const nameCapitalized = capitalize(name)\n\n    setCategorys( (prevent) => [nameCapitalized,...prevent]  )\n    add_category.current.value = \"\";\n  }\n\n  return (\n    <div>\n      <h1 className='p-2 text-center'>Buscador de Gift</h1>\n      <GripForm handlerCategory={handlerCategory} add_category={add_category}></GripForm>\n      {\n        categorys.length === 0 \n        ? <div class=\"alert alert-warning\" role=\"alert\">Agregue una categoria</div> \n        : \"\"\n      }\n      {\n        categorys.map( value => <GripList key={value} category={value}></GripList> )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}